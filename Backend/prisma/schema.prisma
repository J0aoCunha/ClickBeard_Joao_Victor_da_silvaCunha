generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model administradores {
  id        Int         @id @default(autoincrement())
  nome      String      @db.VarChar(100)
  email     String      @unique @db.VarChar(100)
  senha     String      @db.VarChar(255)
  criado_em DateTime?   @default(now()) @db.Timestamp(6)
  barbeiros barbeiros[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model agendamentos {
  id                        Int                    @id @default(autoincrement())
  cliente_id                Int
  barbeiro_especialidade_id Int
  data_horario              DateTime               @db.Timestamp(6)
  status                    String?                @default("ativo") @db.VarChar(20)
  criado_em                 DateTime?              @default(now()) @db.Timestamp(6)
  barbeiro_especialidade    barbeiro_especialidade @relation(fields: [barbeiro_especialidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  clientes                  clientes               @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model barbeiro_especialidade {
  id               Int            @id @default(autoincrement())
  barbeiro_id      Int
  especialidade_id Int
  agendamentos     agendamentos[]
  barbeiros        barbeiros      @relation(fields: [barbeiro_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  especialidades   especialidades @relation(fields: [especialidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([barbeiro_id, especialidade_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model barbeiros {
  id                     Int                      @id @default(autoincrement())
  nome                   String                   @db.VarChar(100)
  idade                  Int?
  data_contratacao       DateTime                 @db.Date
  criado_em              DateTime?                @default(now()) @db.Timestamp(6)
  criado_por             Int?
  barbeiro_especialidade barbeiro_especialidade[]
  administradores        administradores?         @relation(fields: [criado_por], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model clientes {
  id           Int            @id @default(autoincrement())
  nome         String         @db.VarChar(100)
  email        String         @unique @db.VarChar(100)
  senha        String         @db.VarChar(255)
  criado_em    DateTime?      @default(now()) @db.Timestamp(6)
  agendamentos agendamentos[]
}

model especialidades {
  id                     Int                      @id @default(autoincrement())
  nome                   String                   @unique @db.VarChar(100)
  barbeiro_especialidade barbeiro_especialidade[]
}
