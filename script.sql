-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public._prisma_migrations
(
    id character varying(36) COLLATE pg_catalog."default" NOT NULL,
    checksum character varying(64) COLLATE pg_catalog."default" NOT NULL,
    finished_at timestamp with time zone,
    migration_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    logs text COLLATE pg_catalog."default",
    rolled_back_at timestamp with time zone,
    started_at timestamp with time zone NOT NULL DEFAULT now(),
    applied_steps_count integer NOT NULL DEFAULT 0,
    CONSTRAINT _prisma_migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.administradores
(
    id serial NOT NULL,
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    senha character varying(255) COLLATE pg_catalog."default" NOT NULL,
    criado_em timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT administradores_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.agendamentos
(
    id serial NOT NULL,
    cliente_id integer NOT NULL,
    barbeiro_especialidade_id integer NOT NULL,
    data_horario timestamp(6) without time zone NOT NULL,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'ativo'::character varying,
    criado_em timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT agendamentos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.barbeiro_especialidade
(
    id serial NOT NULL,
    barbeiro_id integer NOT NULL,
    especialidade_id integer NOT NULL,
    CONSTRAINT barbeiro_especialidade_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.barbeiros
(
    id serial NOT NULL,
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    idade integer,
    data_contratacao date NOT NULL,
    criado_em timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    criado_por integer,
    CONSTRAINT barbeiros_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.clientes
(
    id serial NOT NULL,
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    senha character varying(255) COLLATE pg_catalog."default" NOT NULL,
    criado_em timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT clientes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.especialidades
(
    id serial NOT NULL,
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    valor integer NOT NULL,
    duracao_minutos integer NOT NULL,
    CONSTRAINT especialidades_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.agendamentos
    ADD CONSTRAINT agendamentos_barbeiro_especialidade_id_fkey FOREIGN KEY (barbeiro_especialidade_id)
    REFERENCES public.barbeiro_especialidade (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.agendamentos
    ADD CONSTRAINT agendamentos_cliente_id_fkey FOREIGN KEY (cliente_id)
    REFERENCES public.clientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.barbeiro_especialidade
    ADD CONSTRAINT barbeiro_especialidade_barbeiro_id_fkey FOREIGN KEY (barbeiro_id)
    REFERENCES public.barbeiros (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.barbeiro_especialidade
    ADD CONSTRAINT barbeiro_especialidade_especialidade_id_fkey FOREIGN KEY (especialidade_id)
    REFERENCES public.especialidades (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.barbeiros
    ADD CONSTRAINT barbeiros_criado_por_fkey FOREIGN KEY (criado_por)
    REFERENCES public.administradores (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;